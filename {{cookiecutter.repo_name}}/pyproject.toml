[tool.poetry]
name = "{{cookiecutter.repo_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.author_name}} <{{cookiecutter.author_email}}>"]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.dev-dependencies]
yastyleguide = "0.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]
name = "cz_customize"

[tool.commitizen.customize]
message_template = "{{"{{change_type}}"}}[{{cookiecutter.commit_prefix}}{{"{{issue_number}}"}}]:{{"{% if show_message %}"}} {{"{{message}}"}}{{"{% endif %}"}}"
example = "docs({{cookiecutter.commit_prefix}}): add new docs."
schema = "<type>[{{cookiecutter.commit_prefix}}<issue_number>]: <body>"
schema_pattern = "(fix|wip|docs|sub|ref)(\\[{{cookiecutter.commit_prefix}}\\d+\\])?:(\\s.*)"
change_type_order = ["wip", "fix", "docs", "sub", "ref"]
commit_parser = "^(?P<change_type>fix|wip|docs|sub|ref)\\({{cookiecutter.commit_prefix}}?P<issue_number>\\):\\s(?P<message>.*)?"

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
choices = [
    {value = "wip", name = "wip: Work in progress."},
    {value = "fix", name = "fix: Fix something wrong."},
    {value = "docs", name = "docs: Change documentation."},
    {value = "sub", name = "sub: Some subsidary work."},
    {value = "ref", name = "ref: Refactoring."}
]
message = "Select the type of change you are committing:"

[[tool.commitizen.customize.questions]]
type = "input"
name = "issue_number"
message = "Issue nember:"

[[tool.commitizen.customize.questions]]
type = "input"
name = "message"
message = "Body:"

[[tool.commitizen.customize.questions]]
type = "confirm"
name = "show_message"
message = "Do you want to add body message in commit?"
